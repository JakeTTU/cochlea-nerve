


%%

fiber_properties = fiber_properties_0522();

fiber_properties = [ ...
    fiber_properties.test_6_n4
    ];

%%
global_opts = { ...
    'debug', true, ...
    'mna_ver', 'dev2', ...
    'Numstacks', 300, ...
    ...'oe_identifier', 'none', ...
    'oe_identifier', 'Meddis', ...
    ...'me_identifier', 'none', ...
    'me_identifier', 'PBLL', ...
    };

%%

[args, opt, memopt, paropt] = common_opts(struct(), ...
    do_not_change_settings=true, ...
    silent=true);

FREQUENCY = 4000;

AMPLITUDE = 80;

tone_duration = Time(20, 'ms');

stim_generator = @(Conf) devopts.stimulus( ...
        args.GlobalSamplingFrequency, tone_duration, ...
        'frequency', Conf.frequency, ...
        'amplitude', Conf.amplitude, ...
        'amplitude_unit', 'spl', ...
        'zeroDuration', Time(50, 'ms'), ...
        'fadeDuration', Time(20, 'ms'), ... 
        'onset', Time(1, 'ms'), ...
        'offset', Time(1, 'ms'));

num_replicas = 10;

%%

signal_poduct_args = { ...
    'frequency', FREQUENCY, ...
    'amplitude', AMPLITUDE};

[Signal_Configurations, Signal_Conf_nums, Signal_Conf_info] = ParameterProduct( ...
        signal_poduct_args{:});


product_args = [ ...
    signal_poduct_args, ...
    { ...
        'fiber_properties', fiber_properties, ...
    }];

zero_stim_fun = @(Conf) devopts.stimulus( ...
        args.GlobalSamplingFrequency, tf, ...
        'zeroDuration', Time(0, 'ms'), ...
        'fadeDuration', Time(0, 'ms'), ... 
        'onset', Time(0, 'ms'), ...
        'offset', Time(0, 'ms'), ...
        'special', 'zero');

zero_product_args = {};

%% Plot signals

PLOT_SIGNALS = true;
if PLOT_SIGNALS
    figure();
    hold on
    for j = 1:numel(Signal_Configurations)    
        Conf = Signal_Configurations(j);
        [topt, stimulus] = stim_generator(Conf);
        env = stimulus.envelope_fcn('ms');
        A = 10^(stimulus.amplitude/20);
        plot(stimulus.audiotime.ms, A * env(stimulus.audiotime.ms))
    end
end

%% Calculate

CALCULATE = true;

if CALCULATE
    do_recalculate = {};

    MNA_run_multi(...
        global_opts{:}, ...
        parallel=true, ...
        ...parallel=false, ...
        ...do_recalculate={'ant_postprocess'}, ...
        do_recalculate=do_recalculate, ...
        stimulus_fun=stim_generator, ...
        product_args=signal_poduct_args, ...
        sim_groups={'active'}, ...
        gain_factor=1.0)

    t = tic();

    for j = 1:numel(Signal_Configurations)

        Conf = Signal_Configurations(j);

        [topt, stimulus] = stim_generator(Conf);

        % CALCULATE / VERIFY WE HAVE IC (serial)
        oneANTjob(...
            global_opts{:}, ...
            do_plot={'none'}, ...
            ...parallel=true, ...
            parallel=false, ...
            ...do_recalculate={'ant_postprocess'}, ...
            do_recalculate=do_recalculate, ...
            parallel_switch='one_job', ...
            ant_fun='ANT', ...
            ant_ver='v4', ...
            fiber_properties=fiber_properties, ...
            ...
            calculate_only_ant_IC=true, ...
            num_replicas=0, ...
            ...
            hh_method='cw', ...
            slices={'max_std_new'}, ...
            ...mna_ver='dev_v0e', ...
            stimulus=stimulus, ...
            topt=topt, ...
            gain_factor=1.0)

        % CALCULATE REPLICAS (parallel)
        oneANTjob(...
            global_opts{:}, ...
            do_plot={'none'}, ...
            parallel=true, ...
            ...parallel=false, ...
            ...do_recalculate={'ant_postprocess'}, ...
            do_recalculate=do_recalculate, ...
            parallel_switch='one_job', ...
            ant_fun='ANT', ...
            ant_ver='v4', ...
            fiber_properties=fiber_properties, ...
            num_replicas=num_replicas, ...
            hh_method='cw', ...
            slices={'max_std_new'}, ...
            stimulus=stimulus, ...
            topt=topt, ...
            gain_factor=1.0)

        done_frac = j / numel(Signal_Configurations);
        time_expected = (1-done_frac)*toc(t)/(done_frac);
        dbprintf('MAIN LOOP %d/%d, %s expected\n', j, numel(Signal_Configurations), disp_toc(time_expected))
    end
end

%%

PLOT = true;

postprocess_windows = {'full'};

% PLOT = false;

if PLOT
    for j = 1:numel(Signal_Configurations)

        Conf = Signal_Configurations(j);

        [topt, stimulus] = stim_generator(Conf);

        do_recalculate = {};

        oneANTjob(...
            global_opts{:}, ...
            do_plot={'synapse_avg'}, ...
            ...parallel=true, ...
            parallel=false, ...
            ...do_recalculate={'ant_postprocess'}, ...
            do_recalculate=do_recalculate, ...
            parallel_switch='one_job', ...
            postprocess_windows=postprocess_windows, ...
            ant_fun='ANT', ...
            ant_ver='v4', ...
            fiber_properties=fiber_properties, ...
            num_replicas=num_replicas, ...
            hh_method='cw', ...
            slices={'max_std_new'}, ...
            stimulus=stimulus, ...
            topt=topt, ...
            gain_factor=1.0)
    end
end

